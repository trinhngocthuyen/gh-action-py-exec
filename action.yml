name: "Install dependencies"
description: "Install dependencies"
inputs:
  checkout-submodules:
    description: "Whether to checkout submodules"
    default: false
  python-version:
    description: "Python version"
    required: true
    default: 3.8
  hook-version-file:
    description: "Hook version file (for pre-release version)"
  hook-version-suffix:
    description: "Version suffix (for re-release version)"
  makefile-target:
    description: "Makefile target"
  pypi-token:
    description: "PyPI API token"
  artifacts-upload-name:
    description: "Artifacts name (to upload)"
  artifacts-upload-path:
    description: "Artifacts path (to upload)"
  artifacts-download-name:
    description: "Artifacts name (to download)"
  artifacts-download-path:
    description: "Artifacts path (to download)"
outputs:
  artifacts-name:
    description: "Artifacts name"
    value: ${{ steps.upload-artifacts.outputs.name }}
  artifacts-path:
    description: "Artifacts path"
    value: ${{ steps.upload-artifacts.outputs.path }}

runs:
  using: "composite"
  steps:
    - name: Check out
      uses: actions/checkout@v3
      with:
        submodules: ${{ inputs.checkout-submodules }}
    - name: Download artifacts
      if: inputs.artifacts-download-name || inputs.artifacts-download-path
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifacts-download-name }}
        path: ${{ inputs.artifacts-download-path }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: Hook version
      if: inputs.hook-version-file && inputs.hook-version-suffix
      run: |
        echo -n ${{ inputs.hook-version-suffix }} >> ${{ inputs.hook-version-file }}
        echo "version = $(cat ${{ inputs.hook-version-file }})"
      shell: bash
    - name: Prepare for PyPI upload
      if: inputs.pypi-token
      run: |
        python3 -m pip install -r requirements.txt
        python3 setup.py bdist_wheel
      shell: bash
    - name: Publish to PyPI
      if: inputs.pypi-token
      uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ inputs.pypi-token }}
    - name: Clean up pkg build artifacts
      if: inputs.pypi-token
      run: rm -rf build dist
      shell: bash
    - name: Run makefile target (${{ inputs.makefile-target }})
      if: inputs.makefile-target
      run: make ${{ inputs.makefile-target }}
      shell: bash
    - name: Upload artifacts
      if: always() && (inputs.artifacts-upload-name || inputs.artifacts-upload-path)
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.artifacts-upload-name }}
        path: ${{ inputs.artifacts-upload-path }}
    - id: upload-artifacts
      if: always() && (inputs.artifacts-upload-name || inputs.artifacts-upload-path)
      run: |
        echo "::set-output name=name::${{ inputs.artifacts-upload-name }}"
        echo "::set-output name=path::${{ inputs.artifacts-upload-path }}"
      shell: bash
